name: Provision EC2 and Run Ansible

on: workflow_dispatch

jobs:
  runterraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List out directory
        run: ls

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init -upgrade

      - name: Terraform apply
        id: terraform
        run: terraform apply -auto-approve

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Output Instance Public IP
        id: ip
        run: |
          IP=$(terraform output -raw instance_public_ip)
          echo "::set-output name=PUBLIC_IP::$IP"
          echo "The public IP is $IP"
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    outputs:
      public_ip: ${{ steps.ip.outputs.PUBLIC_IP }}


  ansible:
    needs: runterraform  # Make this job depend on the `terraform` job
    runs-on: ubuntu-latest
    steps:

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # - name: Test SSH Connection
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ needs.runterraform.outputs.public_ip }}

      - name: Wait for SSH to come up
        run: |
          timeout=600
          while ((timeout > 0))
          do
            ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ needs.runterraform.outputs.public_ip }} uptime && break
            timeout=$((timeout - 10))
            sleep 10
          done
        timeout-minutes: 20
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use the IP
        run: |
          echo "The public IP from the terraform job is ${{ needs.runterraform.outputs.public_ip }}"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Ansible
        run: python -m pip install --upgrade pip && pip install ansible




      - name: Create Ansible Inventory
        run: |
          echo '[ec2_instance]' > inventory.ini
          echo '${{ needs.runterraform.outputs.public_ip }}' >> inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: False


  # AnsibleSetup:
  #   needs: terraform
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: print ip
  #       run: |
  #         echo "The public IP from the terraform job is ${{ needs.terraform.public_ip }}" 
  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.x

  #     - name: Install Ansible
  #       run: pip install ansible



      # - name: Wait for SSH
      #   run: |
      #     while ((1)); do
      #       nc -zvw3 ${{ needs.terraform.outputs.ip }} 22 && echo "SSH is ready" && break
      #       echo "Waiting for SSH..."
      #       sleep 5
      #     done

      # - name: Run Ansible playbook
      #   run: |
      #     echo "[ec2]" > inventory
      #     echo "${{ needs.terraform.outputs.ip }}" >> inventory
      #     ansible-playbook -i inventory playbook.yml
      #   env:
      #     ANSIBLE_HOST_KEY_CHECKING: False
      #     PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
